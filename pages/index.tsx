import Head from "next/head";
import axios from "axios";
import { useEffect, useState } from "react";
import { ResponseType } from "@/typings";
import CurrentSection from "@/components/current/CurrentSection";
import DailySection from "@/components/daily/DailySection";
import HourlySection from "@/components/hourly/HourlySection";

export default function Home() {
  const API_KEY = process.env.NEXT_PUBLIC_WEATHER_API_KEY;
  const [response, setResponse] = useState<ResponseType | null>(null);
  const [currentCity, setCurrentCity] = useState("Novi Sad");

  const options = {
    method: "GET",
    url: "https://weatherapi-com.p.rapidapi.com/forecast.json",
    params: { q: currentCity, days: "3" },
    headers: {
      "X-RapidAPI-Key": API_KEY,
      "X-RapidAPI-Host": "weatherapi-com.p.rapidapi.com",
    },
  };

  function makeRequest() {
    axios
      .request(options)
      .then(function (response) {
        setResponse(response.data);
      })
      .catch(function (error) {
        console.error(error);
      });
  }

  function changeCity(e: any) {
    setCurrentCity(e.target.value);
  }

  useEffect(() => {
    makeRequest();
  }, []);

  if (!response) {
    return (
      <div
        className="flex justify-center items-center
    min-w-full min-h-screen
    bg-gradient-to-b from-blue-100 via-blue-300 to-blue-500
    "
      >
        Loading data...
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className="min-w-full min-h-screen space-y-10 py-10
        bg-gradient-to-b from-blue-100 via-blue-300 to-blue-500
        flex flex-col items-center "
      >
        <form
          onSubmit={(e) => {
            e.preventDefault();
            makeRequest();
          }}
        >
          <label className="text-xl font-semibold">Enter city name </label>
          <input
            type="text"
            className="rounded-xl px-3 bg-blue-100 
            text-center 
            border-2 border-blue-900"
            onChange={changeCity}
          />
        </form>

        <CurrentSection response={response} />
        <HourlySection response={response} />
        <DailySection response={response} />
      </main>
    </>
  );
}
